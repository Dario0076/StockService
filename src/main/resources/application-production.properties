# Configuración para producción (Render) - StockService
spring.application.name=StockService

# Configuración del servidor
server.port=${PORT:8081}
server.address=0.0.0.0

# Configuración PostgreSQL para Render (usando variables de entorno separadas)
spring.datasource.url=jdbc:postgresql://dpg-d31377fdiees73afo4i0-a.oregon-postgres.render.com:5432/stockdb_pdqv
spring.datasource.username=${DB_USERNAME:stockdb_pdqv_user}
spring.datasource.password=${DB_PASSWORD:5Wc7hdgsxZqFD1AvzvYSO82ToOf0joZj}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=never
spring.jpa.show-sql=false

# URLs de otros microservicios en Render
productosservice.url=${PRODUCTOS_SERVICE_URL:http://localhost:8084}

# Endpoints de actuator para health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Configuración de logging
logging.level.root=INFO
logging.level.com.inventario=INFO
